# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
- name: Cache
  uses: actions/cache@v3.3.0
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    - name: Setup Node.js environment
  uses: actions/setup-node@v3.6.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    
    - name: Await Taktile Deployment
  # You may pin to the exact commit or the version.
  # uses: taktile-org/await-taktile-deployment-action@3ebb7b87b16f94e8c87c7b546dc002006d57f708
  uses: taktile-org/await-taktile-deployment-action@v0.3.0
  with:
    # Your Taktile API key
    TKTL_API_KEY: 
    # Long commit hash of the deployment. If not set GITHUB_SHA is used
    DEPLOY_SHA: # optional
    
    
    
    - name: Veracode Profile Sandboxes Helper
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-sandboxes-helper@baa0a8458605b92d261b6b8f7801fa67fdce501b
  uses: veracode/veracode-sandboxes-helper@v1.0.0
  with:
    # The activity expected from the Action: clean, promote-latest-scan, remove-sandbox
    activity: # optional
    # Veracode Application name
    app-name: 
    # Sandbox name for actions related to a specific Sandbox
    sandbox-name: # optional
    # The amount of oldest scanned-in sandboxes to remove
    clean-amount: # optional, default is 1
    # Deletes the sandbox after its promotion. Only works with the [promote] activity. Default is false
    delete-on-promote: # optional, default is false
    # The number of days which the sandbox had no activity
    clean-modified-before: # optional, default is 0
    
    
    
    - name: Swift test action for Datadog
  # You may pin to the exact commit or the version.
  # uses: DataDog/swift-test-action@08968f4b2f41d9cbe02865cdd87b598f93731d18
  uses: DataDog/swift-test-action@1.0.0
  with:
    # Datadog API key
    api_key: 
    # Datadog Application key
    application_key: 
    # Platform to run: \"ios\", \"macos\" or \"tvos\". By default: \"ios\"
    platform: # optional, default is ios
    # .xcworkspace file, if not set, workspace will be autoselected
    workspace: # optional
    # .xcodeproj file, if not set, project will be autoselected
    project: # optional
    # Scheme to test, if not set, scheme will be autoselected
    scheme: # optional
    # Sdk used for building, by default: \"iphonesimulator\" will be used
    sdk: # optional
    # Destination for testing, by default: \"platform=iOS Simulator,name=iPhone 13\"
    destination: # optional
    # Configuration for testing, by default: \"Debug\"
    configuration: # optional
    # Version of the Datagog SDK testing framework to use for testing, by default the latest stable
    libraryVersion: # optional
    # These input will be added directly to the build/test command
    extraParameters: # optional, default is 
    
    
    - name: Codefresh pipeline runner
  # You may pin to the exact commit or the version.
  # uses: codefresh-io/codefresh-pipeline-runner@c563a2bb98a7b8522192aaabf79ee9504141f8dc
  uses: codefresh-io/codefresh-pipeline-runner@v7
  with:
    # codefresh cli build variables, see https://codefresh-io.github.io/cli/pipelines/run-pipeline/#setting-variables-through-the-command for more information.
    args: # optional
    
    
    - name: Unity - Return License
  # You may pin to the exact commit or the version.
  # uses: game-ci/unity-return-license@39eed66c5d43dc75f6d7eef74ba94acaa0fd2933
  uses: game-ci/unity-return-license@v2.0.0
  
  
  - name: Source to Image Build
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/s2i-build@338d362878e811df2022261728b493e11de1d14c
  uses: redhat-actions/s2i-build@v2
  with:
    # The path of the s2i builder image.
    builder_image: 
    # The Name of the image to build
    image: 
    # The tags of the image to build. For multiple tags, seperate by a space. For example, "latest v1".
    tags: # optional, default is latest
    # The location of the path to run s2i from
    path_context: # optional, default is .
    # Log level when running the S2I
    log_level: # optional, default is 1
    # List of environment variable key-value pairs to pass to the s2i builder context
    env_vars: # optional
    # Include all files in tar during build which includes .git directory
    include_git: # optional, default is false
    
    - name: Kubectl Apply
  # You may pin to the exact commit or the version.
  # uses: okteto/apply@d4a08eb69dd66fdfb5ad047a025ba9d0913a1c92
  uses: okteto/apply@latest
  with:
    # Path to the Kubernetes manifest. Can be a file or a directory
    manifest: # optional, default is k8s.yml
    # If present, the namespace scope for this action. If not specified, it will use the current context
    namespace: # optional
    
    
